/* Plugin Template generated by Pawn Studio */

#include <sourcemod>
#include <tf2>
#include <clients>

#define  ANGLE_BUFFER_SIZE 2000

//determines whether a player is being tracked
new isTracking  = false;

//a circular buffer meant to hold the most recent reticule behavior of player
new angleBuffer[ANGLE_BUFFER_SIZE][3];
//current position in the buffer
new bufferPos = 0;
//index of the client being watched
new clientIdx = -1;

public Plugin:myinfo = 
{
	name = "Sniper Watch",
	author = "Alex 'Stinky Pete' Peterson",
	description = "A utility for measuring Sniper behavior, in order to detect aimbots.",
	version = "0.1a",
	url = "github.com/scantics"
}

public OnPluginStart()
{
	HookEvent("player_death",OnPlayerDeath);
	RegAdminCmd("watch",Command_Watch,ADMFLAG_GENERIC);
}

public OnPlayerDeath(Handle:event, const String:name[], bool:dontBroadcast)
{
	if(!isTracking) return;
	
}

public Action:OnClientCommand(client,args)
{
	
}

public OnGameFrame()
{
	if(isTracking)
	{
		GetClientEyeAngles(clientIdx,angleBuffer[bufferPos]);
		bufferPos = (bufferPos+1) % ANGLE_BUFFER_SIZE;
	}
}

public 